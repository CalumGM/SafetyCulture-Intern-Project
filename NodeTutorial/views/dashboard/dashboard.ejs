<%- include('../_partial/_header'); -%>

<div class="row">
    <div class="col-md-6">
        <h1>Data overview</h1>
    </div>
</div>

<div class="row">
    <div class="col-md-6" style="margin-bottom:10px;">
        <!-- <a href="/posts/add" type="button" class="btn btn-default">New Post</a> -->
        <!-- <a href="/posts/view" type="button" class="btn btn-default">View Audits</a> -->
    </div>
</div>
<h3>Total Inspections: <%= inspections.length;%></h3>
<h3>Agents:</h3>

<div class="col-sm-12 col-md-12">
    <div class="col-sm-12 col-md-6">
        <div class="agent_performance">
            <h3>Agent performance</h3>
            <canvas id="agent_performance_chart"></canvas>
        </div>
    </div>
    <div class="col-sm-12 col-md-6">
        <div class="team_performance">
            <h3>Team performance</h3>
            <canvas id="team_performance_chart"></canvas>
        </div>
    </div>
    <div class="col-sm-12 col-md-6">
        <div class="agent_alignment">
            <h3>Agent Alignment</h3>
            <canvas id="agent_alignment_chart"></canvas>
        </div>
    </div>
    <div class="col-sm-12 col-md-6">
        <div class="team_hotspots">
            <h3>Hotspots (Map?)</h3>
        </div>
    </div>

</div>

<script> 
    // graph plotting using Chartjs
    var agentPerformanceJS = document.getElementById('agent_performance_chart').getContext('2d');
    var teamPerformanceJS = document.getElementById('team_performance_chart').getContext('2d');
    var agentAlignmentJS = document.getElementById('agent_alignment_chart').getContext('2d');
    // Global Options
    Chart.defaults.global.defaultFontFamily.Chart = 'Lato';
    Chart.defaults.global.defaultFontSize.Chart = 18;
    Chart.defaults.global.defaultFontColor.Chart = '#000';
    Chart.defaults.global.hover.mode = 'nearest';

    agentPerformanceChartData = {
                labels: ['Red', 'Blue', 'Yellow', 'Green', 'Purple', 'Orange'],
                datasets: [{
                label: '# of Votes',
                data: [12, 19, 3, 5, 2, 3],
                backgroundColor: [
                    'rgba(255, 99, 132, 0.2)','rgba(54, 162, 235, 0.2)','rgba(255, 206, 86, 0.2)','rgba(75, 192, 192, 0.2)','rgba(153, 102, 255, 0.2)','rgba(255, 159, 64, 0.2)'
                ],
                borderColor: [
                    'rgba(255, 99, 132, 1)','rgba(54, 162, 235, 1)','rgba(255, 206, 86, 1)','rgba(75, 192, 192, 1)','rgba(153, 102, 255, 1)','rgba(255, 159, 64, 1)'
                ],
                borderWidth: 1
                }]
            };
    agentPerformanceChartOptions = {
                title:{
                    display:true,
                    text:'Bar Chart',
                    fontSize: 25,
                    fontColor: '#000'
                },
                legend:{
                    display: false, // set to true to show the legend
                    position:'right',
                    labels:{
                        fontColor: '#000'
                    }
                },
                layout:{
                    padding:{
                        left:0, right:0, bottom:0, top:0
                    }
                },
                scales: {
                yAxes: [{
                    ticks: {
                        beginAtZero: true
                    }
                }]
                }
            };

    alignmentChartData = {
                labels: ['Chris', 'Calum', 'Tim', 'Green', 'Purple', 'Orange'],
                datasets: [{
                label: 'Relative Performance',
                data: [-.2, .2, .1, -.05, .12, -.3],
                backgroundColor: [
                    'rgba(255, 99, 132, 0.2)','rgba(54, 162, 235, 0.2)','rgba(255, 206, 86, 0.2)','rgba(75, 192, 192, 0.2)','rgba(153, 102, 255, 0.2)','rgba(255, 159, 64, 0.2)'
                ],
                borderColor: [
                    'rgba(255, 99, 132, 1)','rgba(54, 162, 235, 1)','rgba(255, 206, 86, 1)','rgba(75, 192, 192, 1)','rgba(153, 102, 255, 1)','rgba(255, 159, 64, 1)'
                ],
                borderWidth: 1
                }]
            };
    alignmentChartOptions = {
                title:{
                    display:true,
                    text:'Agent Alignment',
                    fontSize: 25,
                    fontColor: '#000'
                },
                legend:{
                    display: false, // set to true to show the legend
                    position:'right',
                    labels:{
                        fontColor: '#000'
                    }
                },
                layout:{
                    padding:{
                        left:0, right:0, bottom:0, top:0
                    }
                },
                scales: {
                yAxes: [{
                    ticks: {
                        beginAtZero: true,
                        min: -1,
                        max: 1
                    }
                }]
                }
            };
    lineChartData = {
                labels: ['Red', 'Blue', 'Yellow', 'Green', 'Purple', 'Orange'],
                datasets: [{
                label: '# of Votes',
                data: [12, 19, 3, 5, 2, 3],
                backgroundColor: [
                    'rgba(255, 99, 132, 0.2)','rgba(54, 162, 235, 0.2)','rgba(255, 206, 86, 0.2)','rgba(75, 192, 192, 0.2)','rgba(153, 102, 255, 0.2)','rgba(255, 159, 64, 0.2)'
                ],
                borderColor: [
                    'rgba(255, 99, 132, 1)','rgba(54, 162, 235, 1)','rgba(255, 206, 86, 1)','rgba(75, 192, 192, 1)','rgba(153, 102, 255, 1)','rgba(255, 159, 64, 1)'
                ],
                borderWidth: 1
                }]
            };
    lineChartOptions = {
                title:{
                    display:true,
                    text:'Line Graph',
                    fontSize: 25,
                    fontColor: '#000'
                },
                legend:{
                    display: false, // set to true to show the legend
                    position:'right',
                    labels:{
                        fontColor: '#000'
                    }
                },
                layout:{
                    padding:{
                        left:0, right:0, bottom:0, top:0
                    }
                },
                scales: {
                yAxes: [{
                    ticks: {
                        beginAtZero: true
                    }
                }]
                }
            };
    var agentPerformance = new Chart(agentPerformanceJS, {
        type:'bar', // bar, horizontal, pie, line, doughnut, radar, polarArea
        data:agentPerformanceChartData,
        options:agentPerformanceChartOptions
    });
    var teamPerformance = new Chart(teamPerformanceJS, {
        type: 'line',
        data: lineChartData,
        options: lineChartOptions
    });
    var agentAlignment = new Chart(agentAlignmentJS, {
        type: 'bar',
        data:alignmentChartData,
        options:alignmentChartOptions
    });
</script>
<% inspections.forEach(function(inspection) { %> 
    <!-- loop through every post passed through-->
    <!-- inspection.header_items.forEach(function(header_item) {}
        print(header_item['parent_id'])
        )}
    <div class="col-sm-12 col-md-12">
        <h3><%= inspection.audit_id %></h3>
        <p><%= inspection.createdAt %></p>
        <p><%= inspection.createdAt %></p>
        <h1><%= myVariable %></h1>
    </div>-->
<% }) %>

<%- include ('../_partial/_footer'); -%>