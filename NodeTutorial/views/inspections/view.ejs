<%- include('../_partial/_header'); -%>

<%- include('../_partial/_select_agent'); -%>

<div class="col-md-10"> <!-- RHS column -->
    <!--<h1>Inspections completed by <%= agent_data['agent_name'] %></h1>-->
    <div class="row"> <!-- top row -->
        <div class="col-md-4">
            <h4># Inspections: <%= agent_data['number_of_inspections']%></h4>
            <h4>Average Score: <%= agent_data['avg_score']%></h4>
        </div>
        <div class="col-md-4">
            <input type="text" name="daterange" id="daterange"/>
        </div>
        <div class="col-md-4">
            <h6>3rd column</h6>
        </div>
    </div>
    <div class="row">
        <div class="col-md-6">
            <canvas id="agentCanvas"></canvas>
        </div>

        <div class="col-md-6">
            <h4><div id="map"></div></h4>
        </div>
    </div>
    <row>
        <!-- the row below the bar chart -->
    </row>

</div>
</div> <!-- ends the row div, place columns above this-->

<!-- Google maps plotting-->
<script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyAH_H9EYGbVq07pReSI_32NAh1iODKDyno&callback=initMap&libraries=&v=weekly"defer></script>
<style type="text/css">
    /* Set the size of the div element that contains the map */
    #map {
    height: 300px;
    /* The height is 400 pixels */
    width: 100%;
    /* The width is the width of the web page */
    }
</style>
<script> // map script
    // Initialize and add the map
    function initMap() {

    // The location of Townsville
    const townsville = { lat: -19.288, lng: 146.763 };
    // The map, centered at Townsville
    const map = new google.maps.Map(document.getElementById("map"), {
        zoom: 12,
        center: townsville,
        disableDefaultUI: true,
    });
    var count = 0;
    
    <% agent_data['GPS_data'].forEach(function(street_location) { %>
        count = count +1;
        var audit_index = <%-agent_data['GPS_data'].indexOf(street_location)%>;
        var address = <%- "'" +  street_location.addr + "'" %>;
        var coordinates = {lat:<%- street_location.lat %>,lng: <%- street_location.long %>}
        var audit_id =  <%- "'" + audits[agent_data['GPS_data'].indexOf(street_location)].audit_id + "'"%>;
        var marker = new google.maps.Marker({
            position: coordinates,
            map: map,
    
        });
        var infowindow = new google.maps.InfoWindow({
            content: address,
        });
        //infowindow.open(map, marker);
        google.maps.event.addListener(map, 'click', (function(infowindow) {
            return function() {
                infowindow.close();
            }
        })(infowindow));

        google.maps.event.addListener(marker, 'click', (function(marker, audit_index) {
            return function() {
                var contentString = address;
                infowindow.setContent(contentString);
                infowindow.open(map, marker);
            }
        })(marker, audit_index));
    <% }) %>
    //console.log(count)
    }
    
</script>
<script> // script for date range
    function datediff(first, second) {
        // Take the difference between the dates and divide by milliseconds per day.
        // Round to nearest whole number to deal with DST.
        console.log(Math.round((second-first)/(1000*60*60*24)))
        return Math.round((second-first)/(1000*60*60*24));
    }
    
    var start_date, end_date;
    const monthNames = ["January", "February", "March", "April", "May", "June",
        "July", "August", "September", "October", "November", "December"];
    var dateObj = new Date();
    var month = dateObj.getMonth()+1;
    var day = String(dateObj.getDate()).padStart(2, '0');
    var year = dateObj.getFullYear();
    
    var current_date = new Date(year + '-' + month + '-' + day);
    var min_date = new Date();
    // calculate the minimum date based on the length of the time series data
    min_date.setTime(current_date.getTime() - 1000*60*60*24* <%= agent_data['number_of_audits_per_day'].length %>);
    // change text string in HMTL div
    document.getElementById('daterange').innerHTML = 'test';
    $(function() {
        $('input[name="daterange"]').daterangepicker({
            dateFormat: "yy-mm-dd",
            minDate: new Date(min_date),
            maxDate: new Date(current_date),
            opens: 'left'
            }, function(start, end, label) {
            // start and end are the two dates selected on the GUI
            start_date = start.format('YYYY-MM-DD'); // moment object
            end_date = end.format('YYYY-MM-DD');
            var start_index = datediff(min_date, start._d);
            var end_index = datediff(min_date, end._d)
            var new_stuff = [<%- "'"+ agent_data['day_labels'].join("','") + "'" %>]
            updateChart(start_index, end_index, agentChart);
            //update map
            
        });
    });
    function updateChart(start, end, chart){
        var new_labels = [<%- "'"+ agent_data['day_labels'].join("','") + "'" %>].slice(start, end);
        var new_data = [<%- "'"+ agent_data['number_of_audits_per_day'].join("','") + "'" %>].slice(start, end);
        chart.data.labels = new_labels;
        chart.data.datasets.data = new_data;
        chart.update();
    }
</script>

<script> // graph plotting using Chartjs
    const my_num = 5;
    console.log(my_num)
    // Global Options
    var agentCanvasjs = document.getElementById('agentCanvas').getContext('2d');

    Chart.defaults.global.defaultFontFamily.Chart = 'Lato';
    Chart.defaults.global.defaultFontSize.Chart = 18;
    Chart.defaults.global.defaultFontColor.Chart = '#000';
    Chart.defaults.global.hover.mode = 'nearest';
    var timeFormat = 'DD/MM/YYYY';
    barChartData = {
                labels: [<%- "'"+ agent_data['day_labels'].join("','") + "'" %>],
                datasets: [{
                label: <%- "'"+ '# of Inspections by ' + agent_data['agent_name'] + "'"%> ,
                data: [<%=agent_data['number_of_audits_per_day'] %>],
                backgroundColor:'rgba(255, 99, 132, 0.2)',
                borderColor:'rgba(255, 99, 132, 1)',
                borderWidth: 1
                }]
            };
    barChartOptions = {
                aspectRatio: 1.5,
                title:{
                    display:true,
                    text:<%- "'"+ '2020 Inspections by ' + agent_data['agent_name'] + "'"%>,
                    fontSize: 20,
                    fontColor: '#000'
                },
                legend:{
                    display: false, // set to true to show the legend
                    position:'right',
                    labels:{
                        fontColor: '#000'
                    }
                },
                layout:{
                    padding:{
                        left:0, right:0, bottom:0, top:0
                    }
                },
                scales: {
                yAxes: [{
                    ticks: {
                        beginAtZero: true
                    },
                    scaleLabel: {
                        display: true,
                        labelString: 'Number of Inspections'
                    }
                }],
                xAxes: [{
                    ticks: {
                        beginAtZero: true
                    },
                    scaleLabel: {
                        display: false,
                        labelString: 'Time'
                    }
                }]
                }

            };

    var agentChart = new Chart(agentCanvasjs, {
        type:'bar', // bar, horizontal, pie, line, doughnut, radar, polarArea
        data:barChartData,
        options:barChartOptions
    });
</script>

<%- include ('../_partial/_footer'); -%>